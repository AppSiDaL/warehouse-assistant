<script>
  import "./ButtonHandler.client";
  import "leaflet/dist/leaflet.css";
  import L from "leaflet";
  import RobotService from "../services/robot";
  let map:any;
  let marker:any;
  let positionIndex = 0;
  const positions = [
    {x: 250, y: 1000},
    {x: 350, y: 1000},
    {x: 500, y: 1000},
    {x: 600, y: 1000},
    {x: 600, y: 800},
    {x: 600, y: 400},
    {x: 600, y: 400},
    {x: 600, y: 200},
    {x: 500, y: 200},
    {x: 350, y: 200},
    {x: 250, y: 200},
    {x: 250, y: 200},
    {x: 250, y: 400},
    {x: 250, y: 600},
    {x: 250, y: 800},
    {x: 250, y: 1000},
  ];

  async function initMap() {
    let bounds = [
      [50, 50], // padding
      [847, 1280], // image dimensions
    ];

    map = L.map("map", {
      crs: L.CRS.Simple,
      maxZoom: 1,
      minZoom: -4,
      maxBounds: bounds as any,
    });

    // Cargar la imagen generada por el robot
    const blob = await RobotService.fetchMap();
    const url = URL.createObjectURL(blob);

    L.imageOverlay("/map2.png", bounds as any).addTo(map);
    map.fitBounds(bounds);

    marker = L.marker([50, 50])
      .addTo(map)
      .bindPopup("Robot Position")
      .openPopup();
  }

  function updateRobotPosition(x:any, y:any) {
    if (marker) {
      marker.setLatLng([x, y]);
      map.setView([x, y], map.getZoom());
    }
  }

  function simulateRobotMovement() {
    const position = positions[positionIndex];
    updateRobotPosition(position.x, position.y);
    positionIndex = (positionIndex + 1) % positions.length;
  }

  document.addEventListener("DOMContentLoaded", () => {
    initMap();

    // Simular el movimiento del robot cada 2 segundos
    setInterval(simulateRobotMovement, 2000);
  });
</script>

<div id="map" class="w-full h-96 rounded-lg shadow-lg"></div>